{
  "address": "0x1F4378E07B8450b84778966560B68f3995bA3CeB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV2Router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCenter",
          "type": "address"
        }
      ],
      "name": "CenterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCenter",
          "type": "address"
        }
      ],
      "name": "CenterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSwapped",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethReceived",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIntoLiqudity",
          "type": "uint256"
        }
      ],
      "name": "SwapAndLiquify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SwapAndLiquifyEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_center",
          "type": "address"
        }
      ],
      "name": "addCenter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escape",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUniswapPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUniswapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_center",
          "type": "address"
        }
      ],
      "name": "isCenter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pointRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_center",
          "type": "address"
        }
      ],
      "name": "removeCenter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setSwapAndLiquifyEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contractTokenBalance",
          "type": "uint256"
        }
      ],
      "name": "swapAndLiquify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAndLiquifyEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
  "receipt": {
    "to": null,
    "from": "0x23ABfdBd2535aC77ea60a078707a9e5820b0Fff2",
    "contractAddress": "0x1F4378E07B8450b84778966560B68f3995bA3CeB",
    "transactionIndex": 17,
    "gasUsed": "4216001",
    "logsBloom": "0x
    "blockHash": "0x12e3ba4ddfbdb1890414773dc1b7c2c33f3aeb1789f19f6423aac4085f65803f",
    "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 8884891,
        "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
        "address": "0x1F4378E07B8450b84778966560B68f3995bA3CeB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023abfdbd2535ac77ea60a078707a9e5820b0fff2"
        ],
        "data": "0x",
        "logIndex": 16,
        "blockHash": "0x12e3ba4ddfbdb1890414773dc1b7c2c33f3aeb1789f19f6423aac4085f65803f"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 8884891,
        "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
        "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x0000000000000000000000001f4378e07b8450b84778966560b68f3995ba3ceb",
          "0x000000000000000000000000c778417e063141139fce010982780140aa0cd5ab"
        ],
        "data": "0x000000000000000000000000bd1c609b3f47ff17a761b88c415b2abf84d9bdd00000000000000000000000000000000000000000000000000000000000004662",
        "logIndex": 17,
        "blockHash": "0x12e3ba4ddfbdb1890414773dc1b7c2c33f3aeb1789f19f6423aac4085f65803f"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 8884891,
        "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
        "address": "0x1F4378E07B8450b84778966560B68f3995bA3CeB",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001f4378e07b8450b84778966560b68f3995ba3ceb"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000186a0",
        "logIndex": 18,
        "blockHash": "0x12e3ba4ddfbdb1890414773dc1b7c2c33f3aeb1789f19f6423aac4085f65803f"
      },
      {
        "transactionIndex": 17,
        "blockNumber": 8884891,
        "transactionHash": "0x48bb6dae65d82e7b97436ef3982a863457a043b2927deecb9717ba37907ce39a",
        "address": "0x1F4378E07B8450b84778966560B68f3995bA3CeB",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023abfdbd2535ac77ea60a078707a9e5820b0fff2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000989680",
        "logIndex": 19,
        "blockHash": "0x12e3ba4ddfbdb1890414773dc1b7c2c33f3aeb1789f19f6423aac4085f65803f"
      }
    ],
    "blockNumber": 8884891,
    "cumulativeGasUsed": "6255112",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
  ],
  "solcInputHash": "502e51b79a3b2eac6a2ce83a540fac3f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCenter\",\"type\":\"address\"}],\"name\":\"CenterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCenter\",\"type\":\"address\"}],\"name\":\"CenterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SwapAndLiquifyEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_center\",\"type\":\"address\"}],\"name\":\"addCenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escape\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_center\",\"type\":\"address\"}],\"name\":\"isCenter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_center\",\"type\":\"address\"}],\"name\":\"removeCenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSwapAndLiquifyEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractTokenBalance\",\"type\":\"uint256\"}],\"name\":\"swapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UTB.sol\":\"UTB\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"},\"contracts/UTB.sol\":{\"content\":\"// contracts/UTB.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./features/Liquidator.sol\\\";\\n\\ncontract UTB is Liquidator {\\n\\tmapping(address => bool) private centers;\\n\\n\\tevent CenterAdded(address newCenter);\\n\\tevent CenterRemoved(address oldCenter);\\n\\n\\tconstructor(address _uniswapV2Router) Liquidator(\\\"Utilitybia Token\\\", \\\"UTB\\\", _uniswapV2Router) {\\n\\t\\tsuper._mint(msg.sender, 100 ether / pointRate); // UTB for 100 ETH\\n\\t}\\n\\n\\tfunction decimals() public view virtual override returns (uint8) {\\n\\t\\treturn 2;\\n\\t}\\n\\n\\tmodifier onlyCenter(address _center) {\\n\\t\\trequire(centers[_center], \\\"Permission denied\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction addCenter(address _center) external onlyOwner {\\n\\t\\trequire(_center != address(0), \\\"Center invalid\\\");\\n\\t\\trequire(!centers[_center], \\\"Center exists\\\");\\n\\t\\tcenters[_center] = true;\\n\\t\\temit CenterAdded(_center);\\n\\t}\\n\\n\\tfunction removeCenter(address _center) external onlyOwner {\\n\\t\\trequire(_center != address(0), \\\"Center invalid\\\");\\n\\t\\trequire(centers[_center], \\\"Center does not exists\\\");\\n\\t\\tdelete centers[_center];\\n\\t\\temit CenterRemoved(_center);\\n\\t}\\n\\n\\tfunction isCenter(address _center) public view returns (bool) {\\n\\t\\treturn centers[_center];\\n\\t}\\n\\n\\tfunction mint(address account, uint256 amount) external onlyCenter(msg.sender) {\\n\\t\\trequire(account != address(0), \\\"Account invalid\\\");\\n\\t\\trequire(amount > 0, \\\"Amount invalid\\\");\\n\\t\\tsuper._mint(account, amount);\\n\\t}\\n\\n\\tfunction burn(uint256 amount) external {\\n\\t\\trequire(amount > 0, \\\"Amount invalid\\\");\\n\\t\\tsuper._burn(msg.sender, amount);\\n\\t}\\n}\\n\",\"keccak256\":\"0xa58e058ae473059f1ffd9df3d36165688dce92f4aacc436054b414cfc15324b7\",\"license\":\"MIT\"},\"contracts/features/Liquidator.sol\":{\"content\":\"// contracts/utilities/Liquidator.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"../interfaces/IUniswap.sol\\\";\\n\\ncontract Liquidator is Ownable, ERC20 {\\n\\tuint256 public constant pointRate = 10**13; // 18 - 2 - 3\\n\\n\\tusing SafeMath for uint256;\\n\\n\\tevent SwapAndLiquifyEnabledUpdated(bool enabled);\\n\\tevent SwapAndLiquify(uint256 tokensSwapped, uint256 ethReceived, uint256 tokensIntoLiqudity);\\n\\n\\tbool inSwapAndLiquify;\\n\\tbool public initialized;\\n\\tbool public swapAndLiquifyEnabled = true;\\n\\n\\tIUniswapV2Router02 private uniswapV2Router;\\n\\taddress private uniswapV2Pair;\\n\\n\\tconstructor(\\n\\t\\tstring memory name,\\n\\t\\tstring memory symbol,\\n\\t\\taddress _uniswapV2Router\\n\\t) ERC20(name, symbol) {\\n\\t\\tuniswapV2Router = IUniswapV2Router02(_uniswapV2Router);\\n\\t\\tuniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\n\\t\\tsuper._mint(address(this), 1 ether / pointRate); // UTB for 100 ETH\\n\\t}\\n\\n\\tfunction escape() public onlyOwner {\\n\\t\\trequire(address(this).balance > 0, \\\"Amount insufficient\\\");\\n\\t\\tpayable(owner()).transfer(address(this).balance);\\n\\t}\\n\\n\\tfunction getUniswapRouter() public view returns (address) {\\n\\t\\treturn address(uniswapV2Router);\\n\\t}\\n\\n\\tfunction getUniswapPair() public view returns (address) {\\n\\t\\treturn uniswapV2Pair;\\n\\t}\\n\\n\\tmodifier notInitialized() {\\n\\t\\trequire(!initialized, \\\"Already initialized\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction initLiquidity() public onlyOwner notInitialized {\\n\\t\\tinitialized = true;\\n\\t\\taddLiquidity(1 ether / pointRate, 1 ether, owner());\\n\\t}\\n\\n\\tfunction setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {\\n\\t\\tswapAndLiquifyEnabled = _enabled;\\n\\t\\temit SwapAndLiquifyEnabledUpdated(_enabled);\\n\\t}\\n\\n\\tmodifier lockTheSwap {\\n\\t\\tinSwapAndLiquify = true;\\n\\t\\t_;\\n\\t\\tinSwapAndLiquify = false;\\n\\t}\\n\\n\\treceive() external payable {}\\n\\n\\tfunction swapAndLiquify(uint256 contractTokenBalance) public lockTheSwap {\\n\\t\\trequire(swapAndLiquifyEnabled, \\\"Liquidation not enabled\\\");\\n\\n\\t\\t// split the contract balance into halves\\n\\t\\tuint256 half = contractTokenBalance.div(2);\\n\\t\\tuint256 otherHalf = contractTokenBalance.sub(half);\\n\\n\\t\\t// capture the contract's current ETH balance.\\n\\t\\t// this is so that we can capture exactly the amount of ETH that the\\n\\t\\t// swap creates, and not make the liquidity event include any ETH that\\n\\t\\t// has been manually sent to the contract\\n\\t\\tuint256 initialBalance = address(this).balance;\\n\\n\\t\\t// swap tokens for ETH\\n\\t\\tswapTokensForEth(half); // <- this breaks the ETH -> HATE swap when swap+liquify is triggered\\n\\n\\t\\t// how much ETH did we just swap into?\\n\\t\\tuint256 newBalance = address(this).balance.sub(initialBalance);\\n\\n\\t\\t// add liquidity to uniswap\\n\\t\\taddLiquidity(otherHalf, newBalance, msg.sender);\\n\\n\\t\\temit SwapAndLiquify(half, newBalance, otherHalf);\\n\\t}\\n\\n\\tfunction swapTokensForEth(uint256 tokenAmount) private {\\n\\t\\t// generate the uniswap pair path of token -> weth\\n\\t\\taddress[] memory path = new address[](2);\\n\\t\\tpath[0] = address(this);\\n\\t\\tpath[1] = uniswapV2Router.WETH();\\n\\n\\t\\tsuper._approve(address(this), address(uniswapV2Router), tokenAmount);\\n\\n\\t\\t// make the swap\\n\\t\\tuniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n\\t\\t\\ttokenAmount,\\n\\t\\t\\t0, // accept any amount of ETH\\n\\t\\t\\tpath,\\n\\t\\t\\taddress(this),\\n\\t\\t\\tblock.timestamp\\n\\t\\t);\\n\\t}\\n\\n\\tfunction addLiquidity(\\n\\t\\tuint256 tokenAmount,\\n\\t\\tuint256 ethAmount,\\n\\t\\taddress to\\n\\t) private {\\n\\t\\t// approve token transfer to cover all possible scenarios\\n\\t\\tsuper._approve(address(this), address(uniswapV2Router), tokenAmount);\\n\\n\\t\\t// add the liquidity\\n\\t\\tuniswapV2Router.addLiquidityETH{ value: ethAmount }(\\n\\t\\t\\taddress(this),\\n\\t\\t\\ttokenAmount,\\n\\t\\t\\t0, // slippage is unavoidable\\n\\t\\t\\t0, // slippage is unavoidable\\n\\t\\t\\tto,\\n\\t\\t\\tblock.timestamp\\n\\t\\t);\\n\\t}\\n}\\n\",\"keccak256\":\"0x2d7cec0cd56df9608fa30ef3cf1186761835148d850837d8d9c54ecaa7527373\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Factory {\\n\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint256);\\n\\n\\tfunction feeTo() external view returns (address);\\n\\n\\tfunction feeToSetter() external view returns (address);\\n\\n\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\n\\n\\tfunction allPairs(uint256) external view returns (address pair);\\n\\n\\tfunction allPairsLength() external view returns (uint256);\\n\\n\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n\\tfunction setFeeTo(address) external;\\n\\n\\tfunction setFeeToSetter(address) external;\\n}\\n\\ninterface IUniswapV2Router01 {\\n\\tfunction factory() external pure returns (address);\\n\\n\\tfunction WETH() external pure returns (address);\\n\\n\\tfunction addLiquidity(\\n\\t\\taddress tokenA,\\n\\t\\taddress tokenB,\\n\\t\\tuint256 amountADesired,\\n\\t\\tuint256 amountBDesired,\\n\\t\\tuint256 amountAMin,\\n\\t\\tuint256 amountBMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t)\\n\\t\\texternal\\n\\t\\treturns (\\n\\t\\t\\tuint256 amountA,\\n\\t\\t\\tuint256 amountB,\\n\\t\\t\\tuint256 liquidity\\n\\t\\t);\\n\\n\\tfunction addLiquidityETH(\\n\\t\\taddress token,\\n\\t\\tuint256 amountTokenDesired,\\n\\t\\tuint256 amountTokenMin,\\n\\t\\tuint256 amountETHMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t)\\n\\t\\texternal\\n\\t\\tpayable\\n\\t\\treturns (\\n\\t\\t\\tuint256 amountToken,\\n\\t\\t\\tuint256 amountETH,\\n\\t\\t\\tuint256 liquidity\\n\\t\\t);\\n\\n\\tfunction removeLiquidity(\\n\\t\\taddress tokenA,\\n\\t\\taddress tokenB,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountAMin,\\n\\t\\tuint256 amountBMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256 amountA, uint256 amountB);\\n\\n\\tfunction removeLiquidityETH(\\n\\t\\taddress token,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountTokenMin,\\n\\t\\tuint256 amountETHMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256 amountToken, uint256 amountETH);\\n\\n\\tfunction removeLiquidityWithPermit(\\n\\t\\taddress tokenA,\\n\\t\\taddress tokenB,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountAMin,\\n\\t\\tuint256 amountBMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline,\\n\\t\\tbool approveMax,\\n\\t\\tuint8 v,\\n\\t\\tbytes32 r,\\n\\t\\tbytes32 s\\n\\t) external returns (uint256 amountA, uint256 amountB);\\n\\n\\tfunction removeLiquidityETHWithPermit(\\n\\t\\taddress token,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountTokenMin,\\n\\t\\tuint256 amountETHMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline,\\n\\t\\tbool approveMax,\\n\\t\\tuint8 v,\\n\\t\\tbytes32 r,\\n\\t\\tbytes32 s\\n\\t) external returns (uint256 amountToken, uint256 amountETH);\\n\\n\\tfunction swapExactTokensForTokens(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256[] memory amounts);\\n\\n\\tfunction swapTokensForExactTokens(\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 amountInMax,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256[] memory amounts);\\n\\n\\tfunction swapExactETHForTokens(\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external payable returns (uint256[] memory amounts);\\n\\n\\tfunction swapTokensForExactETH(\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 amountInMax,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256[] memory amounts);\\n\\n\\tfunction swapExactTokensForETH(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256[] memory amounts);\\n\\n\\tfunction swapETHForExactTokens(\\n\\t\\tuint256 amountOut,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external payable returns (uint256[] memory amounts);\\n\\n\\tfunction quote(\\n\\t\\tuint256 amountA,\\n\\t\\tuint256 reserveA,\\n\\t\\tuint256 reserveB\\n\\t) external pure returns (uint256 amountB);\\n\\n\\tfunction getAmountOut(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 reserveIn,\\n\\t\\tuint256 reserveOut\\n\\t) external pure returns (uint256 amountOut);\\n\\n\\tfunction getAmountIn(\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 reserveIn,\\n\\t\\tuint256 reserveOut\\n\\t) external pure returns (uint256 amountIn);\\n\\n\\tfunction getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n\\tfunction getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\n\\t\\taddress token,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountTokenMin,\\n\\t\\tuint256 amountETHMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external returns (uint256 amountETH);\\n\\n\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n\\t\\taddress token,\\n\\t\\tuint256 liquidity,\\n\\t\\tuint256 amountTokenMin,\\n\\t\\tuint256 amountETHMin,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline,\\n\\t\\tbool approveMax,\\n\\t\\tuint8 v,\\n\\t\\tbytes32 r,\\n\\t\\tbytes32 s\\n\\t) external returns (uint256 amountETH);\\n\\n\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external;\\n\\n\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external payable;\\n\\n\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint256 deadline\\n\\t) external;\\n}\\n\",\"keccak256\":\"0xdfa5a14ee43ecf6e18ebbf3e42a8f0d0bfa7c6774d00346ac0e27b3ab0ee3fb9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526006805462ff00001916620100001790553480156200002257600080fd5b5060405162002032380380620020328339810160408190526200004591620004f3565b6040518060400160405280601081526020016f2aba34b634ba3cb134b0902a37b5b2b760811b815250604051806040016040528060038152602001622aaa2160e91b81525082828260006200009f6200036160201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508151620000fe9060049060208501906200044d565b508051620001149060059060208401906200044d565b50505080600660036101000a8154816001600160a01b0302191690836001600160a01b03160217905550600660039054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018d57600080fd5b505afa158015620001a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c89190620004f3565b6001600160a01b031663c9c6539630600660039054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200022657600080fd5b505afa1580156200023b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002619190620004f3565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b158015620002aa57600080fd5b505af1158015620002bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e59190620004f3565b600780546001600160a01b0319166001600160a01b03929092169190911790556200033530620003246509184e72a000670de0b6b3a764000062000548565b6200036560201b62000f9a1760201c565b5050506200035a336509184e72a00068056bc75e2d6310000062000324919062000548565b50620005a6565b3390565b6001600160a01b038216620003c05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060036000828254620003d4919062000523565b90915550506001600160a01b038216600090815260016020526040812080548392906200040390849062000523565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200045b9062000569565b90600052602060002090601f0160209004810192826200047f5760008555620004ca565b82601f106200049a57805160ff1916838001178555620004ca565b82800160010185558215620004ca579182015b82811115620004ca578251825591602001919060010190620004ad565b50620004d8929150620004dc565b5090565b5b80821115620004d85760008155600101620004dd565b60006020828403121562000505578081fd5b81516001600160a01b03811681146200051c578182fd5b9392505050565b600082198211156200054357634e487b7160e01b81526011600452602481fd5b500190565b6000826200056457634e487b7160e01b81526012600452602481fd5b500490565b600181811c908216806200057e57607f821691505b60208210811415620005a057634e487b7160e01b600052602260045260246000fd5b50919050565b611a7c80620005b66000396000f3fe6080604052600436106101bb5760003560e01c8063715018a6116100ec578063a965a51b1161008a578063d180667d11610064578063d180667d146104fb578063dc1c0be714610510578063dd62ed3e14610530578063f2fde38b1461057657600080fd5b8063a965a51b1461048d578063bcfee335146104a2578063c49b9a80146104db57600080fd5b806395d89b41116100c657806395d89b4114610418578063a457c2d71461042d578063a688e6e51461044d578063a9059cbb1461046d57600080fd5b8063715018a6146103c75780638d190f02146103dc5780638da5cb5b146103fa57600080fd5b8063313ce5671161015957806342966c681161013357806342966c68146103185780634a74bb0214610338578063524900b51461035857806370a082311461039157600080fd5b8063313ce567146102bc57806339509351146102d857806340c10f19146102f857600080fd5b8063173865ad11610195578063173865ad1461024157806318160ddd1461026357806318ebdced1461028257806323b872dd1461029c57600080fd5b806306fdde03146101c7578063095ea7b3146101f2578063158ef93e1461022257600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101dc610596565b6040516101e99190611899565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004611809565b610628565b60405190151581526020016101e9565b34801561022e57600080fd5b5060065461021290610100900460ff1681565b34801561024d57600080fd5b5061026161025c366004611854565b61063e565b005b34801561026f57600080fd5b506003545b6040519081526020016101e9565b34801561028e57600080fd5b506102746509184e72a00081565b3480156102a857600080fd5b506102126102b73660046117c9565b610739565b3480156102c857600080fd5b50604051600281526020016101e9565b3480156102e457600080fd5b506102126102f3366004611809565b6107ea565b34801561030457600080fd5b50610261610313366004611809565b610821565b34801561032457600080fd5b50610261610333366004611854565b61090c565b34801561034457600080fd5b506006546102129062010000900460ff1681565b34801561036457600080fd5b50600654630100000090046001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b34801561039d57600080fd5b506102746103ac366004611759565b6001600160a01b031660009081526001602052604090205490565b3480156103d357600080fd5b5061026161095a565b3480156103e857600080fd5b506007546001600160a01b0316610379565b34801561040657600080fd5b506000546001600160a01b0316610379565b34801561042457600080fd5b506101dc6109ce565b34801561043957600080fd5b50610212610448366004611809565b6109dd565b34801561045957600080fd5b50610261610468366004611759565b610a78565b34801561047957600080fd5b50610212610488366004611809565b610b9d565b34801561049957600080fd5b50610261610baa565b3480156104ae57600080fd5b506102126104bd366004611759565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156104e757600080fd5b506102616104f6366004611834565b610c6e565b34801561050757600080fd5b50610261610ce3565b34801561051c57600080fd5b5061026161052b366004611759565b610d8d565b34801561053c57600080fd5b5061027461054b366004611791565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561058257600080fd5b50610261610591366004611759565b610eb0565b6060600480546105a5906119e0565b80601f01602080910402602001604051908101604052809291908181526020018280546105d1906119e0565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b6000610635338484611079565b50600192915050565b6006805460ff19166001179081905562010000900460ff166106a75760405162461bcd60e51b815260206004820152601760248201527f4c69717569646174696f6e206e6f7420656e61626c656400000000000000000060448201526064015b60405180910390fd5b60006106b482600261119e565b905060006106c283836111b1565b9050476106ce836111bd565b60006106da47836111b1565b90506106e7838233611369565b60408051858152602081018390529081018490527f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619060600160405180910390a150506006805460ff19169055505050565b6000610746848484611432565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156107cb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161069e565b6107df85336107da86856119c9565b611079565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916106359185906107da908690611991565b3360008181526008602052604090205460ff166108745760405162461bcd60e51b815260206004820152601160248201527014195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015260640161069e565b6001600160a01b0383166108bc5760405162461bcd60e51b815260206004820152600f60248201526e1058d8dbdd5b9d081a5b9d985b1a59608a1b604482015260640161069e565b600082116108fd5760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b604482015260640161069e565b6109078383610f9a565b505050565b6000811161094d5760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b604482015260640161069e565b610957338261160a565b50565b6000546001600160a01b031633146109845760405162461bcd60e51b815260040161069e906118ec565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600580546105a5906119e0565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610a5f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161069e565b610a6e33856107da86856119c9565b5060019392505050565b6000546001600160a01b03163314610aa25760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610ae95760405162461bcd60e51b815260206004820152600e60248201526d10d95b9d195c881a5b9d985b1a5960921b604482015260640161069e565b6001600160a01b03811660009081526008602052604090205460ff1615610b425760405162461bcd60e51b815260206004820152600d60248201526c43656e7465722065786973747360981b604482015260640161069e565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f87688c1d37784496e9860fca8aea78a4156e6b3091c65fcdc1a6f910019784a591015b60405180910390a150565b6000610635338484611432565b6000546001600160a01b03163314610bd45760405162461bcd60e51b815260040161069e906118ec565b600654610100900460ff1615610c225760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161069e565b6006805461ff001916610100179055610c6c610c4c6509184e72a000670de0b6b3a76400006119a9565b670de0b6b3a7640000610c676000546001600160a01b031690565b611369565b565b6000546001600160a01b03163314610c985760405162461bcd60e51b815260040161069e906118ec565b60068054821515620100000262ff0000199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc15990610b9290831515815260200190565b6000546001600160a01b03163314610d0d5760405162461bcd60e51b815260040161069e906118ec565b60004711610d535760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5b9cdd59999a58da595b9d606a1b604482015260640161069e565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610957573d6000803e3d6000fd5b6000546001600160a01b03163314610db75760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610dfe5760405162461bcd60e51b815260206004820152600e60248201526d10d95b9d195c881a5b9d985b1a5960921b604482015260640161069e565b6001600160a01b03811660009081526008602052604090205460ff16610e5f5760405162461bcd60e51b815260206004820152601660248201527543656e74657220646f6573206e6f742065786973747360501b604482015260640161069e565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f5c19b3f26533d73991591bf6f4f3ff4183c7be24c8cd4cf2acb5bb452953b9659101610b92565b6000546001600160a01b03163314610eda5760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610f3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216610ff05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161069e565b80600360008282546110029190611991565b90915550506001600160a01b0382166000908152600160205260408120805483929061102f908490611991565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166110db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161069e565b6001600160a01b03821661113c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161069e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006111aa82846119a9565b9392505050565b60006111aa82846119c9565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061120057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050600660039054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190611775565b816001815181106112c757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526006546112f4913091630100000090041684611079565b60065460405163791ac94760e01b815263010000009091046001600160a01b03169063791ac94790611333908590600090869030904290600401611921565b600060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b505050505050565b600654611388903090630100000090046001600160a01b031685611079565b60065460405163f305d71960e01b81523060048201526024810185905260006044820181905260648201526001600160a01b0383811660848301524260a483015263010000009092049091169063f305d71990849060c4016060604051808303818588803b1580156113f957600080fd5b505af115801561140d573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611361919061186c565b6001600160a01b0383166114965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069e565b6001600160a01b0382166114f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069e565b6001600160a01b038316600090815260016020526040902054818110156115705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069e565b61157a82826119c9565b6001600160a01b0380861660009081526001602052604080822093909355908516815290812080548492906115b0908490611991565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115fc91815260200190565b60405180910390a350505050565b6001600160a01b03821661166a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161069e565b6001600160a01b038216600090815260016020526040902054818110156116de5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161069e565b6116e882826119c9565b6001600160a01b038416600090815260016020526040812091909155600380548492906117169084906119c9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611191565b60006020828403121561176a578081fd5b81356111aa81611a31565b600060208284031215611786578081fd5b81516111aa81611a31565b600080604083850312156117a3578081fd5b82356117ae81611a31565b915060208301356117be81611a31565b809150509250929050565b6000806000606084860312156117dd578081fd5b83356117e881611a31565b925060208401356117f881611a31565b929592945050506040919091013590565b6000806040838503121561181b578182fd5b823561182681611a31565b946020939093013593505050565b600060208284031215611845578081fd5b813580151581146111aa578182fd5b600060208284031215611865578081fd5b5035919050565b600080600060608486031215611880578283fd5b8351925060208401519150604084015190509250925092565b6000602080835283518082850152825b818110156118c5578581018301518582016040015282016118a9565b818111156118d65783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156119705784516001600160a01b03168352938301939183019160010161194b565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156119a4576119a4611a1b565b500190565b6000826119c457634e487b7160e01b81526012600452602481fd5b500490565b6000828210156119db576119db611a1b565b500390565b600181811c908216806119f457607f821691505b60208210811415611a1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461095757600080fdfea264697066735822122039e472522ef4ecb0f1a11defea33ce78b8dc8787f78e27323cd3b4ca77fa97fd64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106101bb5760003560e01c8063715018a6116100ec578063a965a51b1161008a578063d180667d11610064578063d180667d146104fb578063dc1c0be714610510578063dd62ed3e14610530578063f2fde38b1461057657600080fd5b8063a965a51b1461048d578063bcfee335146104a2578063c49b9a80146104db57600080fd5b806395d89b41116100c657806395d89b4114610418578063a457c2d71461042d578063a688e6e51461044d578063a9059cbb1461046d57600080fd5b8063715018a6146103c75780638d190f02146103dc5780638da5cb5b146103fa57600080fd5b8063313ce5671161015957806342966c681161013357806342966c68146103185780634a74bb0214610338578063524900b51461035857806370a082311461039157600080fd5b8063313ce567146102bc57806339509351146102d857806340c10f19146102f857600080fd5b8063173865ad11610195578063173865ad1461024157806318160ddd1461026357806318ebdced1461028257806323b872dd1461029c57600080fd5b806306fdde03146101c7578063095ea7b3146101f2578063158ef93e1461022257600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101dc610596565b6040516101e99190611899565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004611809565b610628565b60405190151581526020016101e9565b34801561022e57600080fd5b5060065461021290610100900460ff1681565b34801561024d57600080fd5b5061026161025c366004611854565b61063e565b005b34801561026f57600080fd5b506003545b6040519081526020016101e9565b34801561028e57600080fd5b506102746509184e72a00081565b3480156102a857600080fd5b506102126102b73660046117c9565b610739565b3480156102c857600080fd5b50604051600281526020016101e9565b3480156102e457600080fd5b506102126102f3366004611809565b6107ea565b34801561030457600080fd5b50610261610313366004611809565b610821565b34801561032457600080fd5b50610261610333366004611854565b61090c565b34801561034457600080fd5b506006546102129062010000900460ff1681565b34801561036457600080fd5b50600654630100000090046001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b34801561039d57600080fd5b506102746103ac366004611759565b6001600160a01b031660009081526001602052604090205490565b3480156103d357600080fd5b5061026161095a565b3480156103e857600080fd5b506007546001600160a01b0316610379565b34801561040657600080fd5b506000546001600160a01b0316610379565b34801561042457600080fd5b506101dc6109ce565b34801561043957600080fd5b50610212610448366004611809565b6109dd565b34801561045957600080fd5b50610261610468366004611759565b610a78565b34801561047957600080fd5b50610212610488366004611809565b610b9d565b34801561049957600080fd5b50610261610baa565b3480156104ae57600080fd5b506102126104bd366004611759565b6001600160a01b031660009081526008602052604090205460ff1690565b3480156104e757600080fd5b506102616104f6366004611834565b610c6e565b34801561050757600080fd5b50610261610ce3565b34801561051c57600080fd5b5061026161052b366004611759565b610d8d565b34801561053c57600080fd5b5061027461054b366004611791565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b34801561058257600080fd5b50610261610591366004611759565b610eb0565b6060600480546105a5906119e0565b80601f01602080910402602001604051908101604052809291908181526020018280546105d1906119e0565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b6000610635338484611079565b50600192915050565b6006805460ff19166001179081905562010000900460ff166106a75760405162461bcd60e51b815260206004820152601760248201527f4c69717569646174696f6e206e6f7420656e61626c656400000000000000000060448201526064015b60405180910390fd5b60006106b482600261119e565b905060006106c283836111b1565b9050476106ce836111bd565b60006106da47836111b1565b90506106e7838233611369565b60408051858152602081018390529081018490527f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619060600160405180910390a150506006805460ff19169055505050565b6000610746848484611432565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156107cb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161069e565b6107df85336107da86856119c9565b611079565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916106359185906107da908690611991565b3360008181526008602052604090205460ff166108745760405162461bcd60e51b815260206004820152601160248201527014195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015260640161069e565b6001600160a01b0383166108bc5760405162461bcd60e51b815260206004820152600f60248201526e1058d8dbdd5b9d081a5b9d985b1a59608a1b604482015260640161069e565b600082116108fd5760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b604482015260640161069e565b6109078383610f9a565b505050565b6000811161094d5760405162461bcd60e51b815260206004820152600e60248201526d105b5bdd5b9d081a5b9d985b1a5960921b604482015260640161069e565b610957338261160a565b50565b6000546001600160a01b031633146109845760405162461bcd60e51b815260040161069e906118ec565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600580546105a5906119e0565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610a5f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161069e565b610a6e33856107da86856119c9565b5060019392505050565b6000546001600160a01b03163314610aa25760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610ae95760405162461bcd60e51b815260206004820152600e60248201526d10d95b9d195c881a5b9d985b1a5960921b604482015260640161069e565b6001600160a01b03811660009081526008602052604090205460ff1615610b425760405162461bcd60e51b815260206004820152600d60248201526c43656e7465722065786973747360981b604482015260640161069e565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f87688c1d37784496e9860fca8aea78a4156e6b3091c65fcdc1a6f910019784a591015b60405180910390a150565b6000610635338484611432565b6000546001600160a01b03163314610bd45760405162461bcd60e51b815260040161069e906118ec565b600654610100900460ff1615610c225760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161069e565b6006805461ff001916610100179055610c6c610c4c6509184e72a000670de0b6b3a76400006119a9565b670de0b6b3a7640000610c676000546001600160a01b031690565b611369565b565b6000546001600160a01b03163314610c985760405162461bcd60e51b815260040161069e906118ec565b60068054821515620100000262ff0000199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc15990610b9290831515815260200190565b6000546001600160a01b03163314610d0d5760405162461bcd60e51b815260040161069e906118ec565b60004711610d535760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5b9cdd59999a58da595b9d606a1b604482015260640161069e565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610957573d6000803e3d6000fd5b6000546001600160a01b03163314610db75760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610dfe5760405162461bcd60e51b815260206004820152600e60248201526d10d95b9d195c881a5b9d985b1a5960921b604482015260640161069e565b6001600160a01b03811660009081526008602052604090205460ff16610e5f5760405162461bcd60e51b815260206004820152601660248201527543656e74657220646f6573206e6f742065786973747360501b604482015260640161069e565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f5c19b3f26533d73991591bf6f4f3ff4183c7be24c8cd4cf2acb5bb452953b9659101610b92565b6000546001600160a01b03163314610eda5760405162461bcd60e51b815260040161069e906118ec565b6001600160a01b038116610f3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216610ff05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161069e565b80600360008282546110029190611991565b90915550506001600160a01b0382166000908152600160205260408120805483929061102f908490611991565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166110db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161069e565b6001600160a01b03821661113c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161069e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006111aa82846119a9565b9392505050565b60006111aa82846119c9565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061120057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050600660039054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190611775565b816001815181106112c757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526006546112f4913091630100000090041684611079565b60065460405163791ac94760e01b815263010000009091046001600160a01b03169063791ac94790611333908590600090869030904290600401611921565b600060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b505050505050565b600654611388903090630100000090046001600160a01b031685611079565b60065460405163f305d71960e01b81523060048201526024810185905260006044820181905260648201526001600160a01b0383811660848301524260a483015263010000009092049091169063f305d71990849060c4016060604051808303818588803b1580156113f957600080fd5b505af115801561140d573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611361919061186c565b6001600160a01b0383166114965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069e565b6001600160a01b0382166114f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069e565b6001600160a01b038316600090815260016020526040902054818110156115705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069e565b61157a82826119c9565b6001600160a01b0380861660009081526001602052604080822093909355908516815290812080548492906115b0908490611991565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115fc91815260200190565b60405180910390a350505050565b6001600160a01b03821661166a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161069e565b6001600160a01b038216600090815260016020526040902054818110156116de5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161069e565b6116e882826119c9565b6001600160a01b038416600090815260016020526040812091909155600380548492906117169084906119c9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611191565b60006020828403121561176a578081fd5b81356111aa81611a31565b600060208284031215611786578081fd5b81516111aa81611a31565b600080604083850312156117a3578081fd5b82356117ae81611a31565b915060208301356117be81611a31565b809150509250929050565b6000806000606084860312156117dd578081fd5b83356117e881611a31565b925060208401356117f881611a31565b929592945050506040919091013590565b6000806040838503121561181b578182fd5b823561182681611a31565b946020939093013593505050565b600060208284031215611845578081fd5b813580151581146111aa578182fd5b600060208284031215611865578081fd5b5035919050565b600080600060608486031215611880578283fd5b8351925060208401519150604084015190509250925092565b6000602080835283518082850152825b818110156118c5578581018301518582016040015282016118a9565b818111156118d65783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b818110156119705784516001600160a01b03168352938301939183019160010161194b565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156119a4576119a4611a1b565b500190565b6000826119c457634e487b7160e01b81526012600452602481fd5b500490565b6000828210156119db576119db611a1b565b500390565b600181811c908216806119f457607f821691505b60208210811415611a1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461095757600080fdfea264697066735822122039e472522ef4ecb0f1a11defea33ce78b8dc8787f78e27323cd3b4ca77fa97fd64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1336,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1342,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1344,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1346,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1348,
        "contract": "contracts/UTB.sol:UTB",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 5303,
        "contract": "contracts/UTB.sol:UTB",
        "label": "inSwapAndLiquify",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5305,
        "contract": "contracts/UTB.sol:UTB",
        "label": "initialized",
        "offset": 1,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5308,
        "contract": "contracts/UTB.sol:UTB",
        "label": "swapAndLiquifyEnabled",
        "offset": 2,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 5311,
        "contract": "contracts/UTB.sol:UTB",
        "label": "uniswapV2Router",
        "offset": 3,
        "slot": "6",
        "type": "t_contract(IUniswapV2Router02)8532"
      },
      {
        "astId": 5313,
        "contract": "contracts/UTB.sol:UTB",
        "label": "uniswapV2Pair",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 4202,
        "contract": "contracts/UTB.sol:UTB",
        "label": "centers",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router02)8532": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}